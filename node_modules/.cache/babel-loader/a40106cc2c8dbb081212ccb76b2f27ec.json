{"ast":null,"code":"var _jsxFileName = \"/Users/tomperelman/Desktop/desktop/jiji2/src/ErrorBoundry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ErrorBoundry() {\n  _s();\n\n  const [hasError, SethasError] = useState(false);\n  useEffect((error, info) => {\n    SethasError(true);\n  }, []);\n\n  if (hasError === true) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" OOOOOPSIK \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this);\n  }\n\n  return hasError.children;\n} // class ErrorBoundry extends Component {\n// constructor(props) {\n// \tsuper(props);\n// \tthis.state = {\n// \t\thasError: false\n// \t}\n//   }\n//   componentDidCatch(error,info) {\n//   \tthis.setState({hasError: true})\n//   }\n//   render() {\n//   \t if (this.state.hasError) {\n//   \t \treturn <h1> OOOOOPSIK </h1>;\n//   \t }\n//   \t return this.props.children\n//   }\n// }\n\n\n_s(ErrorBoundry, \"7PKk6HwGN68g115rJrvllUmGepw=\");\n\n_c = ErrorBoundry;\nexport default ErrorBoundry;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorBoundry\");","map":{"version":3,"sources":["/Users/tomperelman/Desktop/desktop/jiji2/src/ErrorBoundry.js"],"names":["React","useEffect","useState","ErrorBoundry","hasError","SethasError","error","info","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;;AAEA,SAASC,YAAT,GAAuB;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBH,QAAQ,CAAC,KAAD,CAAvC;AAEED,EAAAA,SAAS,CAAC,CAACK,KAAD,EAAOC,IAAP,KAAe;AAACF,IAAAA,WAAW,CAAC,IAAD,CAAX;AAAkB,GAAnC,EACR,EADQ,CAAT;;AAKD,MAAGD,QAAQ,KAAG,IAAd,EAAoB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACF;;AAED,SAAOA,QAAQ,CAACI,QAAhB;AAGC,C,CAWD;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA9CSL,Y;;KAAAA,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\n\nfunction ErrorBoundry(){\n\n  const [hasError,SethasError] = useState(false);\n\n    useEffect((error,info)=> {SethasError(true)}\n    ,[]);\n \n    \n\n   if(hasError===true) {\n   return <h1> OOOOOPSIK </h1>;\n} \n\nreturn hasError.children;\n\n\n}\n\n\n\n\n\n\n\n\n\n\n// class ErrorBoundry extends Component {\n// constructor(props) {\n// \tsuper(props);\n// \tthis.state = {\n// \t\thasError: false\n// \t}\n\n//   }\n\n//   componentDidCatch(error,info) {\n//   \tthis.setState({hasError: true})\n//   }\n\n//   render() {\n//   \t if (this.state.hasError) {\n//   \t \treturn <h1> OOOOOPSIK </h1>;\n//   \t }\n//   \t return this.props.children\n//   }\n// }\n\nexport default ErrorBoundry;\n"]},"metadata":{},"sourceType":"module"}