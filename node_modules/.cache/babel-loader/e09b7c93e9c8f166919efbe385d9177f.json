{"ast":null,"code":"import React, { useState, Component } from 'react'; // class ErrorBoundry extends Component {\n// constructor(props) {\n// \tsuper(props);\n// \tthis.state = {\n// \t\thasError: false\n// \t}\n//   }\n//   componentDidCatch(error,info) {\n//   \tthis.setState({hasError: true})\n//   }\n//   render() {\n//   \t if (this.state.hasError) {\n//   \t \treturn <h1> OOOOOPSIK </h1>;\n//   \t }\n//   \t return this.props.children\n//   }\n// }\n// export default ErrorBoundry;","map":{"version":3,"sources":["/Users/tomperelman/Desktop/desktop/jiji2/src/ErrorBoundry.js"],"names":["React","useState","Component"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C,C,CAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, Component} from 'react';\n\n\n\n\n\n\n\n\n\n// class ErrorBoundry extends Component {\n// constructor(props) {\n// \tsuper(props);\n// \tthis.state = {\n// \t\thasError: false\n// \t}\n\n//   }\n\n//   componentDidCatch(error,info) {\n//   \tthis.setState({hasError: true})\n//   }\n\n//   render() {\n//   \t if (this.state.hasError) {\n//   \t \treturn <h1> OOOOOPSIK </h1>;\n//   \t }\n//   \t return this.props.children\n//   }\n// }\n\n// export default ErrorBoundry;\n"]},"metadata":{},"sourceType":"module"}